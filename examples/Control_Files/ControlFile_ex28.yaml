# OpenIAM Control File Example 28
#
# This example demonstrates how a LookupTableReservoir component can be used to
# read any type of output from .csv files used for LookupTableReservoir components.
# The metric used here is called "genericMetric," but the approach demonstrated
# could be used to read any other data, e.g., salinity. The metric name must
# correspond to certain column titles in the .csv file used (e.g., column title of
# genericMetric_1 for genericMetric at time step 1) and the metric name must be
# included in the Outputs of the LookupTableReservoir component.
#
# This example uses a modified version of the file Reservoir_data_sim01.csv from the
# Kimberlina data set (https://gitlab.com/NRAP/Kimberlina_data). The file
# was placed in the following location:
#     source/components/reservoir/lookuptables/Test_metrics
#
# The file from the Kimberlina data set was modified to include columns
# for the fields genericMetric_1 through genericMetric_10 (corresponding
# to the times in columns 1 through 10 of the time_points.csv file
# in the same folder). These columns all have a constant value of 999 (only for
# illustration purposes).
# This example also uses a modified version of the parameters_and_filenames.csv file.
# This edited version (parameters_and_filenames_read_genericMetric.csv)
# was also placed in the Test_metrics folder and has only one entry
# corresponding to the file Reservoir_data_sim01_read_genericMetric.csv.
# The parameters are unchanged from the Kimberlina data set,
# however (logResPerm: -13.3, reservoirPorosity: 0.215, logShalePerm: -18.7).
#
# If the above files are not present, this example will produce an error.
# This example is similar to the example ControlFile_ex27.yaml, but it is intended to
# demonstrate that LookupTableReservoirs can be used to read any type of data
# (not just pressure, CO2saturation, and temperature). Although the genericMetric
# data are constant, this approach would also work on metrics that vary over
# space and time.
#
# To run this file, use the command (\ for Windows / for Mac or Linux):
#   python ../../source/openiam/openiam_cf.py --file ControlFile_ex28.yaml
#
# Last Modified: June, 2023
#-------------------------------------------------
ModelParams:
    EndTime: 30
    TimeStep: 1.0
    Analysis: forward
    Components: [LookupTableReservoir1,
                 MultisegmentedWellbore1]
    OutputDirectory: output/output_ex28_{datetime}
    Logging: Debug
#-------------------------------------------------
Stratigraphy:
    numberOfShaleLayers:
        vary: False
        value: 4
    # Thickness is in meters
    shale1Thickness:
        value: 200.0
        vary: False
    shale2Thickness:
        value: 550.0
        vary: False
    shale3Thickness:
        value: 400.0
        vary: False
    shale4Thickness:
        value: 400.0
        vary: False
    aquifer1Thickness:
        value: 150.0
        vary: False
    aquifer2Thickness:
        value: 720.0
        vary: False
    aquifer3Thickness:
        value: 400.0
        vary: False
    reservoirThickness:
        value: 400.0
        vary: False
#-------------------------------------------------
LookupTableReservoir1:
    Type: LookupTableReservoir
    FileDirectory: source/components/reservoir/lookuptables/Test_metrics
    TimeFile: time_points.csv
    # This is one of the modified files mentioned in the description above
    ParameterFilename: parameters_and_filenames_read_genericMetric.csv
    Parameters:
        index: 1
    Outputs: [pressure,
              CO2saturation,
              genericMetric]
#-------------------------------------------------
MultisegmentedWellbore1:
    Type: MultisegmentedWellbore
    Connection: LookupTableReservoir1
    Locations:
        coordx: [37478.0]
        coordy: [48333.0]
    Parameters:
        logWellPerm:
            value: -13.0
            vary: False
    Outputs: [CO2_aquifer1,
              CO2_aquifer2,
              brine_aquifer1,
              brine_aquifer2]
#-------------------------------------------------
Plots:
    pressure_plot:
        TimeSeries: [pressure]
    saturation_plot:
        TimeSeries: [CO2saturation]
    genericMetric_plot:
        TimeSeries: [genericMetric]
    CO2_leakage_plot:
        TimeSeries: [CO2_aquifer1, CO2_aquifer2]
        Subplot:
            NumCols: 2
            Use: True
