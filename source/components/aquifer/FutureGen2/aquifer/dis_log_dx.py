'''
output: dis_log_dx
prediction score: 0.9437477211887425
Forward Pass
---------------------------------------------------------------
iter  parent  var  knot  mse       terms  gcv    rsq    grsq
---------------------------------------------------------------
0     -       -    -     6.294932  1      6.297  0.000  0.000
1     0       9    495   2.128889  3      2.134  0.662  0.661
2     0       10   4247  1.142044  5      1.147  0.819  0.818
3     1       10   2876  0.719989  7      0.725  0.886  0.885
4     1       9    1092  0.569213  9      0.574  0.910  0.909
5     0       2    -1    0.513807  10     0.519  0.918  0.918
6     0       3    3737  0.455963  12     0.461  0.928  0.927
7     0       8    -1    0.434309  13     0.440  0.931  0.930
8     11      0    -1    0.417436  14     0.423  0.934  0.933
9     4       9    3627  0.407787  16     0.414  0.935  0.934
10    11      9    4437  0.399106  18     0.406  0.937  0.936
11    9       10   17    0.391728  20     0.399  0.938  0.937
12    1       1    -1    0.384076  21     0.392  0.939  0.938
13    4       4    -1    0.377648  22     0.386  0.940  0.939
14    0       1    -1    0.370701  23     0.379  0.941  0.940
15    1       10   2788  0.366148  25     0.375  0.942  0.940
---------------------------------------------------------------
Stopping Condition 2: Improvement below threshold

Pruning Pass
--------------------------------------------
iter  bf  terms  mse   gcv    rsq    grsq
--------------------------------------------
0     -   25     0.37  0.375  0.942  0.940
1     6   24     0.37  0.375  0.942  0.940
2     24  23     0.37  0.375  0.942  0.941
3     10  22     0.37  0.375  0.942  0.940
4     16  21     0.37  0.376  0.942  0.940
5     8   20     0.37  0.377  0.941  0.940
6     11  19     0.37  0.379  0.941  0.940
7     2   18     0.37  0.381  0.941  0.940
8     23  17     0.38  0.386  0.940  0.939
9     19  16     0.39  0.391  0.939  0.938
10    18  15     0.39  0.392  0.939  0.938
11    17  14     0.39  0.397  0.938  0.937
12    22  13     0.40  0.401  0.937  0.936
13    21  12     0.40  0.408  0.936  0.935
14    20  11     0.41  0.415  0.935  0.934
15    14  10     0.42  0.423  0.933  0.933
16    4   9      0.43  0.431  0.932  0.932
17    12  8      0.45  0.451  0.929  0.928
18    9   7      0.51  0.510  0.919  0.919
19    13  6      0.57  0.574  0.909  0.909
20    7   5      0.73  0.737  0.883  0.883
21    15  4      0.82  0.823  0.870  0.869
22    5   3      1.35  1.350  0.786  0.786
23    3   2      2.47  2.470  0.608  0.608
24    1   1      6.29  6.297  0.000  0.000
--------------------------------------------
Selected iteration: 2

Earth Model
--------------------------------------------------------------------------
Basis Function                                      Pruned  Coefficient
--------------------------------------------------------------------------
(Intercept)                                         No      2.50702
h(log_co2_mass-0.123405)                            No      0.274885
h(0.123405-log_co2_mass)                            No      6.25086
h(log_brine_mass-13.5262)                           No      0.509731
h(13.5262-log_brine_mass)                           No      -0.0720644
h(log_brine_mass-13.0486)*h(log_co2_mass-0.123405)  No      -0.0279184
h(13.0486-log_brine_mass)*h(log_co2_mass-0.123405)  Yes     None
h(log_co2_mass-10.9296)*h(log_co2_mass-0.123405)    No      0.00769611
h(10.9296-log_co2_mass)*h(log_co2_mass-0.123405)    No      0.00753853
por                                                 No      -7.7965
h(log_permh+11.018)                                 No      46.0764
h(-11.018-log_permh)                                No      -0.176349
time                                                No      0.00630419
thick*h(-11.018-log_permh)                          No      -0.00383004
h(log_co2_mass-0.902299)*h(13.5262-log_brine_mass)  No      0.00341888
h(0.902299-log_co2_mass)*h(13.5262-log_brine_mass)  No      -0.164998
h(log_co2_mass-8.48552)*h(-11.018-log_permh)        No      0.00999973
h(8.48552-log_co2_mass)*h(-11.018-log_permh)        No      0.0452594
h(log_brine_mass-11.245)*por                        No      0.4986
h(11.245-log_brine_mass)*por                        No      0.472029
depth*h(log_co2_mass-0.123405)                      No      9.78873e-05
log_aniso*h(13.5262-log_brine_mass)                 No      -0.0162636
depth                                               No      -0.000816318
h(log_brine_mass-21.0213)*h(log_co2_mass-0.123405)  No      0.0127224
h(21.0213-log_brine_mass)*h(log_co2_mass-0.123405)  Yes     None
--------------------------------------------------------------------------
MSE: 0.3662, GCV: 0.3745, RSQ: 0.9418, GRSQ: 0.9405
parameters:
X[ 0 ] =  thick
X[ 1 ] =  depth
X[ 2 ] =  por
X[ 3 ] =  log_permh
X[ 4 ] =  log_aniso
X[ 5 ] =  rel_vol_frac_calcite
X[ 6 ] =  log_co2_rate
X[ 7 ] =  log_brine_rate
X[ 8 ] =  time
X[ 9 ] =  log_co2_mass
X[ 10 ] =  log_brine_mass
'''
def model(example_iterator):
    accessors = [
        lambda x: 2.507018452444096,
        lambda x: 0.2748845175575198 * max(0, x[9] - 0.1234051037771468),
        lambda x: 6.250855135342718 * max(0, 0.1234051037771468 - x[9]),
        lambda x: 0.5097311856275215 * max(0, x[10] - 13.526158449634602),
        lambda x: -0.07206436939355976 * max(0, 13.526158449634602 - x[10]),
        lambda x: -0.027918423997007787 * max(0, x[10] - 13.048562499262692) *\
            max(0, x[9] - 0.1234051037771468),
        lambda x: 0.007696108488159647 * max(0, x[9] - 10.929586070621312) *\
            max(0, x[9] - 0.1234051037771468),
        lambda x: 0.007538526607082358 * max(0, 10.929586070621312 - x[9]) *\
            max(0, x[9] - 0.1234051037771468),
        lambda x: -7.796502679670372 * x[2],
        lambda x: 46.076399935296045 * max(0, x[3] - -11.017956539011895),
        lambda x: -0.17634863085965793 * max(0, -11.017956539011895 - x[3]),
        lambda x: 0.006304186437053729 * x[8],
        lambda x: -0.0038300380155976413 * x[0] * max(0, -11.017956539011895 - x[3]),
        lambda x: 0.0034188832866075174 * max(0, x[9] - 0.902299154047993) *\
            max(0, 13.526158449634602 - x[10]),
        lambda x: -0.16499834454646764 * max(0, 0.902299154047993 - x[9]) *\
            max(0, 13.526158449634602 - x[10]),
        lambda x: 0.009999725759765127 * max(0, x[9] - 8.485519942542906) *\
            max(0, -11.017956539011895 - x[3]),
        lambda x: 0.04525936573082431 * max(0, 8.485519942542906 - x[9]) *\
            max(0, -11.017956539011895 - x[3]),
        lambda x: 0.49859980019492617 * max(0, x[10] - 11.244966343801647) * x[2],
        lambda x: 0.47202948646547943 * max(0, 11.244966343801647 - x[10]) * x[2],
        lambda x: 9.788728094672905e-05 * x[1] * max(0, x[9] - 0.1234051037771468),
        lambda x: -0.016263585528018504 * x[4] * max(0, 13.526158449634602 - x[10]),
        lambda x: -0.0008163181593979045 * x[1],
        lambda x: 0.012722438826638621 * max(0, x[10] - 21.02128549813054) *\
            max(0, x[9] - 0.1234051037771468)]
    for x in example_iterator:
        yield sum(accessor(x) for accessor in accessors)
